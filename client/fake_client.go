package main

import (
	// "bytes"
	"fmt"
	"github.com/edwardtoday/skyeye/utils"
	"net"
	"os"
)

const get_status = "\x02\xFF\x1B\xE7\x00\x00\x01\x00\x00\x00\x00\x00\x00\x04\x00\x05\x1B\xE8\xD9\xBB\x03"
const status = "\x02\xFF\x1B\xE7\x00\x00\x01\x00\x00\x00\x00\x00\x62\x72\x69\x67\x68\x74\x6E\x65\x73\x73\x5F\x63\x6F\x6E\x74\x72\x6F\x6C\x2C\x62\x72\x69\x67\x68\x74\x6E\x65\x73\x73\x5F\x63\x6F\x6E\x74\x72\x6F\x6C\x2C\x61\x75\x74\x6F\x6D\x61\x74\x69\x63\x2C\x30\x0A\x6D\x61\x6E\x75\x61\x6C\x5F\x62\x72\x69\x67\x68\x74\x6E\x65\x73\x73\x2C\x6D\x61\x6E\x75\x61\x6C\x5F\x62\x72\x69\x67\x68\x74\x6E\x65\x73\x73\x2C\x37\x2C\x30\x0A\x63\x75\x72\x5F\x70\x68\x6F\x74\x6F\x63\x65\x6C\x6C\x2C\x63\x75\x72\x5F\x70\x68\x6F\x74\x6F\x63\x65\x6C\x6C\x2C\x33\x39\x38\x2C\x30\x0A\x63\x75\x72\x5F\x62\x72\x69\x67\x68\x74\x6E\x65\x73\x73\x2C\x63\x75\x72\x5F\x62\x72\x69\x67\x68\x74\x6E\x65\x73\x73\x2C\x31\x38\x2C\x30\x0A\x73\x69\x67\x6E\x5F\x6F\x66\x66\x2C\x73\x69\x67\x6E\x5F\x6F\x66\x66\x2C\x30\x2C\x30\x0A\x6C\x61\x73\x74\x5F\x72\x65\x73\x65\x74\x5F\x74\x69\x6D\x65\x2C\x6C\x61\x73\x74\x5F\x72\x65\x73\x65\x74\x5F\x74\x69\x6D\x65\x2C\x22\x32\x30\x31\x33\x2D\x31\x32\x2D\x32\x35\x20\x31\x36\x3A\x35\x30\x3A\x31\x32\x22\x2C\x30\x0A\x62\x6F\x78\x5F\x65\x72\x72\x6F\x72\x2C\x62\x6F\x78\x30\x2C\x31\x2C\x31\x0A\x62\x6F\x78\x5F\x65\x72\x72\x6F\x72\x2C\x62\x6F\x78\x31\x2C\x31\x2C\x31\x0A\x62\x6F\x78\x5F\x65\x72\x72\x6F\x72\x2C\x62\x6F\x78\x32\x2C\x31\x2C\x31\x0A\x7B\x1B\xE8\xC9\x09\x03"
const get_event = "\x02\xFF\x1B\xE7\x00\x00\x1B\xE7\x00\x00\x00\x00\x00\x00\x04\x00\x06\x1B\xE8\xF4\x12\x03"
const event = ""

func checkError(err error) {
	if err != nil {
		fmt.Fprintf(os.Stderr, "Fatal error: %s", err.Error())
		os.Exit(1)
	}
}

func main() {
	servAddr := "202.11.11.162:9801"
	conn, err := net.Dial("tcp", servAddr)
	defer conn.Close()
	checkError(err)

	// login
	sendBuf := make([]byte, 1024)
	copy(sendBuf, utils.CreatePacketDTU("00", "34363030323038323234383534323000187141C3"))

	_, err = conn.Write(sendBuf[:utils.PacketLen(sendBuf)])
	checkError(err)
	utils.PrintSendBuf(sendBuf)

	// check reply
	recvBuf := make([]byte, 1024)
	
	_, err = conn.Read(recvBuf)
	checkError(err)
	utils.PrintRecvBuf(recvBuf)

	// for {
	// 	_, err := conn.Read(recvBuf)
	// 	checkError(err)
	// 	fmt.Printf("read from server:")
	// 	print_packet(recvBuf)
	// 	if bytes.HasPrefix(recvBuf, []byte(get_status)) {
	// 		// send status
	// 		_, err := conn.Write([]byte(status))
	// 		checkError(err)
	// 	} else if bytes.HasPrefix(recvBuf, []byte(get_event)) {
	// 		// send events
	// 		_, err := conn.Write([]byte(event))
	// 		checkError(err)
	// 	}
	// }
}
